C51 COMPILER V9.59.0.0   DS1302                                                            04/24/2022 19:36:19 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ds1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ds
                    -1302.lst) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include <reg52.h>
   2          #include "ds1302.h"
   3          
   4           
   5          sbit DS1302_SCLK=P3^6;
   6          sbit DS1302_IO=P3^4;
   7          sbit DS1302_CE=P3^5;
   8          
   9          void delay1(unsigned int i)
  10          {
  11   1         unsigned int k;
  12   1         for(k=0;k<i;k++);
  13   1      }
  14          void DS1302_init()
  15          {
  16   1         DS1302_CE=0;
  17   1         DS1302_SCLK=0;
  18   1      }
  19          
  20          void DS1302_WriteByte(uchar command,uchar date)
  21          {
  22   1         uchar i;
  23   1      
  24   1         DS1302_CE=1;
  25   1         //写指令
  26   1         for(i=0;i<8;i++)
  27   1         {
  28   2            DS1302_IO=command&(0x01<<i);
  29   2            DS1302_SCLK=1;
  30   2            DS1302_SCLK=0;
  31   2         }
  32   1         //写数据
  33   1         for(i=0;i<8;i++)
  34   1         {
  35   2            DS1302_IO=date&(0x01<<i);
  36   2            DS1302_SCLK=1;
  37   2            DS1302_SCLK=0;
  38   2         }
  39   1         DS1302_CE=0;
  40   1      }
  41          
  42          uchar DS1302_ReadByte(uchar command)
  43          {
  44   1          uchar i;
  45   1          uchar date=0x00;
  46   1          DS1302_CE=1;
  47   1          //写指令
  48   1          for(i=0;i<8;i++)
  49   1         {
  50   2            DS1302_IO=command&(0x01<<i);
  51   2            DS1302_SCLK=0;
  52   2            delay1(3);
  53   2            DS1302_SCLK=1;
  54   2            delay1(3);
C51 COMPILER V9.59.0.0   DS1302                                                            04/24/2022 19:36:19 PAGE 2   

  55   2         }
  56   1         //读数据
  57   1         DS1302_IO=0;
  58   1         for(i=0;i<8;i++)
  59   1         {
  60   2             DS1302_SCLK=1;
  61   2             delay1(3);
  62   2             DS1302_SCLK=0;
  63   2             delay1(3);
  64   2             if(DS1302_IO)
  65   2             {
  66   3               date|=0x01<<i;
  67   3             }
  68   2         }
  69   1         DS1302_CE=0;
  70   1         return date;
  71   1      }
  72          
  73          //void DS1302_Settime()
  74          //{
  75          //    DS1302_WriteByte(0x8e,0x00);
  76          //    DS1302_WriteByte(0x80,DS1302_time[0]/10*16+DS1302_time[0]%10);//秒
  77          //    DS1302_WriteByte(0x82,DS1302_time[1]/10*16+DS1302_time[1]%10);//分
  78          //    DS1302_WriteByte(0x84,DS1302_time[2]/10*16+DS1302_time[2]%10);//时
  79          //    DS1302_WriteByte(0x86,DS1302_time[3]/10*16+DS1302_time[3]%10);//天
  80          //    DS1302_WriteByte(0x88,DS1302_time[4]/10*16+DS1302_time[4]%10);//月
  81          //    DS1302_WriteByte(0x8a,DS1302_time[5]/10*16+DS1302_time[5]%10);//周
  82          //    DS1302_WriteByte(0x8c,DS1302_time[6]/10*16+DS1302_time[6]%10);//年
  83          //    DS1302_WriteByte(0x8e,0x80);
  84          //}
  85          
  86          //void DS1302_readtime()
  87          //{
  88          //   unsigned char tmp;
  89          //   tmp=DS1302_ReadByte(0x81);
  90          //   DS1302_time[0]=tmp/16*10+tmp%16;//秒
  91          //   
  92          //   tmp=DS1302_ReadByte(0x83);
  93          //   DS1302_time[1]=tmp/16*10+tmp%16;//分
  94          
  95          //   tmp=DS1302_ReadByte(0x85);
  96          //   DS1302_time[2]=tmp/16*10+tmp%16;//时
  97          
  98          //   tmp=DS1302_ReadByte(0x87);
  99          //   DS1302_time[3]=tmp/16*10+tmp%16;//天
 100          //   
 101          //   tmp=DS1302_ReadByte(0x89);
 102          //   DS1302_time[4]=tmp/16*10+tmp%16;//月
 103          //  
 104          //   tmp=DS1302_ReadByte(0x8b);
 105          //   DS1302_time[5]=tmp/16*10+tmp%16;//周
 106          
 107          //   tmp=DS1302_ReadByte(0x8d);
 108          //   DS1302_time[6]=tmp/16*10+tmp%16;//年
 109          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    233    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   DS1302                                                            04/24/2022 19:36:19 PAGE 3   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
