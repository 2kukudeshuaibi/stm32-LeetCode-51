C51 COMPILER V9.59.0.0   IR                                                                05/04/2022 02:16:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst
                    -) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include "IR.h"
   2          
   3          uchar IR_start;//状态切换标志位
   4          uint IR_time;//读取时序的时间
   5          
   6          
   7          uchar IR_date[4];//存储读来的4个字节的数据
   8          uchar IR_pdate;//控制数据的存储位置
   9          
  10          
  11          
  12          uchar IR_dateflag;
  13          uchar IR_repeatflag;
  14          uchar IR_Add;
  15          uchar IR_command;
  16          
  17          
  18          void IR_Init()
  19          {
  20   1         Time0Init();
  21   1         INT0init();
  22   1      }
  23          
  24          
  25          uchar IR_getdateflag()
  26          {
  27   1          if(IR_dateflag)
  28   1          {
  29   2               IR_dateflag=0;
  30   2               return 1;
  31   2          }
  32   1          return 0;
  33   1      }
  34          
  35          uchar IR_getrepeat()
  36          {
  37   1          if(IR_repeatflag)
  38   1          {
  39   2              IR_repeatflag=0;
  40   2              return 1;
  41   2          }
  42   1          return 0;
  43   1      }
  44          
  45          uchar IR_getadd()
  46          {
  47   1          return IR_Add;
  48   1      }
  49          
  50          uchar IR_getcommand()
  51          {
  52   1          return IR_command;
  53   1      }
  54          
C51 COMPILER V9.59.0.0   IR                                                                05/04/2022 02:16:16 PAGE 2   

  55          
  56          void IR_Zduan() interrupt 0
  57          {
  58   1          if(IR_start==0)
  59   1          {
  60   2              
  61   2              Time0set(0);
  62   2              Time0run(1);
  63   2              IR_start=1;
  64   2          }
  65   1          else if(IR_start==1)
  66   1          {
  67   2              IR_time=Gettime();
  68   2              Time0set(0);
  69   2              if((IR_time>13500-900)&&(IR_time<13500+900))
  70   2              {
  71   3                   IR_start=2;
  72   3              }
  73   2              else if((IR_time>11250-900)&&(IR_time<11250+900))
  74   2              {
  75   3                   IR_repeatflag=1;
  76   3                   Time0run(0);
  77   3                   IR_start=0;
  78   3              }
  79   2              else
  80   2              {
  81   3                   IR_start=1;
  82   3              }
  83   2      
  84   2          }
  85   1          else if(IR_start==2)
  86   1          {
  87   2              IR_time=Gettime();
  88   2              Time0set(0);
  89   2              if((IR_time>1120-500)&&(IR_time<1120+500))
  90   2              {
  91   3                   IR_date[IR_pdate/8]&=~(0x01<<IR_pdate%8);
  92   3                   IR_pdate++;
  93   3              }
  94   2              else if((IR_time>2250-500)&&(IR_time<2250+500))
  95   2              {
  96   3                   IR_date[IR_pdate/8]|=(0x01<<IR_pdate%8);
  97   3                   IR_pdate++;
  98   3              }
  99   2              else
 100   2              {
 101   3                   IR_pdate=0;
 102   3                   IR_start=1;
 103   3              }
 104   2              if(IR_pdate>=32)
 105   2              {
 106   3                 IR_pdate=0;
 107   3                 if(((IR_date[0]) == (~IR_date[1])) && ((IR_date[2]) == (~IR_date[3])))
 108   3                 {
 109   4                      IR_Add=IR_date[0];
 110   4                      IR_command=IR_date[2];
 111   4                      IR_dateflag=1;
 112   4                 }
 113   3                 Time0run(0);           
 114   3                 IR_start=0;
 115   3              }
 116   2          }
C51 COMPILER V9.59.0.0   IR                                                                05/04/2022 02:16:16 PAGE 3   

 117   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    372    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
