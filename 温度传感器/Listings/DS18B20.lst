C51 COMPILER V9.59.0.0   DS18B20                                                           04/30/2022 15:46:31 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE DS18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\D
                    -S18B20.lst) OBJECT(.\Objects\DS18B20.obj)

line level    source

   1          #include "DS18B20.h"
   2          #include "intrins.h"
   3          
   4          
   5          /*******************************************************************************
   6          * 函 数 名         : ds18b20_reset
   7          * 函数功能                 : 复位DS18B20  
   8          * 输    入         : 无
   9          * 输    出         : 无
  10          *******************************************************************************/
  11          void ds18b20_reset(void)
  12          {
  13   1              DS18B20_PORT=0; //拉低DQ
  14   1              delay_10us(75); //拉低750us
  15   1              DS18B20_PORT=1; //DQ=1
  16   1              delay_10us(2);  //20US
  17   1      }
  18          
  19          /*******************************************************************************
  20          * 函 数 名         : ds18b20_check
  21          * 函数功能                 : 检测DS18B20是否存在
  22          * 输    入         : 无
  23          * 输    出         : 1:未检测到DS18B20的存在，0:存在
  24          *******************************************************************************/
  25          u8 ds18b20_check(void)
  26          {
  27   1              u8 time_temp=0;
  28   1      
  29   1              while(DS18B20_PORT&&time_temp<20)       //等待DQ为低电平
  30   1              {
  31   2                      time_temp++;
  32   2                      delay_10us(1);  
  33   2              }
  34   1              if(time_temp>=20)return 1;      //如果超时则强制返回1
  35   1              else time_temp=0;
  36   1              while((!DS18B20_PORT)&&time_temp<20)    //等待DQ为高电平
  37   1              {
  38   2                      time_temp++;
  39   2                      delay_10us(1);
  40   2              }
  41   1              if(time_temp>=20)return 1;      //如果超时则强制返回1
  42   1              return 0;
  43   1      }
  44          
  45          /*******************************************************************************
  46          * 函 数 名         : ds18b20_read_bit
  47          * 函数功能                 : 从DS18B20读取一个位
  48          * 输    入         : 无
  49          * 输    出         : 1/0
  50          *******************************************************************************/
  51          u8 ds18b20_read_bit(void)
  52          {
  53   1              u8 dat=0;
  54   1              
C51 COMPILER V9.59.0.0   DS18B20                                                           04/30/2022 15:46:31 PAGE 2   

  55   1              DS18B20_PORT=0;
  56   1              _nop_();_nop_();
  57   1              DS18B20_PORT=1; 
  58   1              _nop_();_nop_(); //该段时间不能过长，必须在15us内读取数据
  59   1              if(DS18B20_PORT)dat=1;  //如果总线上为1则数据dat为1，否则为0
  60   1              else dat=0;
  61   1              delay_10us(5);
  62   1              return dat;
  63   1      } 
  64          
  65          /*******************************************************************************
  66          * 函 数 名         : ds18b20_read_byte
  67          * 函数功能                 : 从DS18B20读取一个字节
  68          * 输    入         : 无
  69          * 输    出         : 一个字节数据
  70          *******************************************************************************/
  71          u8 ds18b20_read_byte(void)
  72          {
  73   1              u8 i=0;
  74   1              u8 dat=0;
  75   1              u8 temp=0;
  76   1      
  77   1              for(i=0;i<8;i++)//循环8次，每次读取一位，且先读低位再读高位
  78   1              {
  79   2                      temp=ds18b20_read_bit();
  80   2                      dat=(temp<<7)|(dat>>1);
  81   2              }
  82   1              return dat;     
  83   1      }
  84          
  85          /*******************************************************************************
  86          * 函 数 名         : ds18b20_write_byte
  87          * 函数功能                 : 写一个字节到DS18B20
  88          * 输    入         : dat：要写入的字节
  89          * 输    出         : 无
  90          *******************************************************************************/
  91          void ds18b20_write_byte(u8 dat)
  92          {
  93   1              u8 i=0;
  94   1              u8 temp=0;
  95   1      
  96   1              for(i=0;i<8;i++)//循环8次，每次写一位，且先写低位再写高位
  97   1              {
  98   2                      temp=dat&0x01;//选择低位准备写入
  99   2                      dat>>=1;//将次高位移到低位
 100   2                      if(temp)
 101   2                      {
 102   3                              DS18B20_PORT=0;
 103   3                              _nop_();_nop_();
 104   3                              DS18B20_PORT=1; 
 105   3                              delay_10us(6);
 106   3                      }
 107   2                      else
 108   2                      {
 109   3                              DS18B20_PORT=0;
 110   3                              delay_10us(6);
 111   3                              DS18B20_PORT=1;
 112   3                              _nop_();_nop_();        
 113   3                      }       
 114   2              }       
 115   1      }
 116          
C51 COMPILER V9.59.0.0   DS18B20                                                           04/30/2022 15:46:31 PAGE 3   

 117          /*******************************************************************************
 118          * 函 数 名         : ds18b20_start
 119          * 函数功能                 : 开始温度转换
 120          * 输    入         : 无
 121          * 输    出         : 无
 122          *******************************************************************************/
 123          void ds18b20_start(void)
 124          {
 125   1              ds18b20_reset();//复位
 126   1              ds18b20_check();//检查DS18B20
 127   1              ds18b20_write_byte(0xcc);//SKIP ROM
 128   1          ds18b20_write_byte(0x44);//转换命令 
 129   1      }
 130          
 131          /*******************************************************************************
 132          * 函 数 名         : ds18b20_init
 133          * 函数功能                 : 初始化DS18B20的IO口 DQ 同时检测DS的存在
 134          * 输    入         : 无
 135          * 输    出         : 1:不存在，0:存在
 136          *******************************************************************************/ 
 137          u8 ds18b20_init(void)
 138          {
 139   1              ds18b20_reset();
 140   1              return ds18b20_check(); 
 141   1      }
 142          
 143          /*******************************************************************************
 144          * 函 数 名         : ds18b20_read_temperture
 145          * 函数功能                 : 从ds18b20得到温度值
 146          * 输    入         : 无
 147          * 输    出         : 温度数据
 148          *******************************************************************************/
 149          float ds18b20_read_temperture(void)
 150          {
 151   1              float temp;
 152   1              u8 dath=0;
 153   1              u8 datl=0;
 154   1              u16 value=0;
 155   1      
 156   1              ds18b20_start();//开始转换
 157   1              ds18b20_reset();//复位
 158   1              ds18b20_check();
 159   1              ds18b20_write_byte(0xcc);//SKIP ROM
 160   1          ds18b20_write_byte(0xbe);//读存储器
 161   1      
 162   1              datl=ds18b20_read_byte();//低字节
 163   1              dath=ds18b20_read_byte();//高字节
 164   1              value=(dath<<8)+datl;//合并为16位数据
 165   1      
 166   1              if((value&0xf800)==0xf800)//判断符号位，负温度
 167   1              {
 168   2                      value=(~value)+1; //数据取反再加1
 169   2                      temp=value*(-0.0625);//乘以精度 
 170   2              }
 171   1              else //正温度
 172   1              {
 173   2                      temp=value*0.0625;      
 174   2              }
 175   1              return temp;
 176   1      }


C51 COMPILER V9.59.0.0   DS18B20                                                           04/30/2022 15:46:31 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    395    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
